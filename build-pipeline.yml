name: $(Build.SourceBranchName)-$(date:yyyyMMdd)$(rev:.r)

trigger:
- develop

pr:
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  disable.coverage.autogenerate: 'true'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/GongSolutions.Wpf.DragDrop (NET4).csproj'
    arguments: '--configuration $(buildConfiguration)'

# - task: CopyFiles@2
#   displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
#   inputs:
#     Contents: |
#      **\*.nuspec
#      **\bin\Release\NET35\GongSolutions.Wpf.DragDrop.dll
#      **\bin\Release\NET35\GongSolutions.Wpf.DragDrop.xml
#      **\bin\Release\NET35\GongSolutions.Wpf.DragDrop.pdb
#      **\bin\Release\NET4\GongSolutions.Wpf.DragDrop.dll
#      **\bin\Release\NET4\GongSolutions.Wpf.DragDrop.xml
#      **\bin\Release\NET4\GongSolutions.Wpf.DragDrop.pdb
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishPipelineArtifact@1
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  inputs:
    targetPath: '$(Build.SourcesDirectory)\GongSolutions.Wpf.DragDrop'
    artifact: 'gong-wpf-dragdrop'