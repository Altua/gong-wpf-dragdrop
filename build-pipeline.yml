name: $(Build.SourceBranchName)-$(date:yyyyMMdd)$(rev:.r)

trigger:
- develop

pr:
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  disable.coverage.autogenerate: 'true'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: Restore
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: Build
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: CopyFiles@2
  displayName: Copy Files ArtifactStagingDirectory
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  inputs:
    Contents: |
     **\*.nuspec
     **\bin\Release\NET35\GongSolutions.Wpf.DragDrop.dll
     **\bin\Release\NET35\GongSolutions.Wpf.DragDrop.xml
     **\bin\Release\NET35\GongSolutions.Wpf.DragDrop.pdb
     **\bin\Release\NET4\GongSolutions.Wpf.DragDrop.dll
     **\bin\Release\NET4\GongSolutions.Wpf.DragDrop.xml
     **\bin\Release\NET4\GongSolutions.Wpf.DragDrop.pdb
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Packages'

- task: PublishPipelineArtifact@1
  displayName: Publish artifact
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/Packages'
    artifact: 'gong-wpf-dragdrop'